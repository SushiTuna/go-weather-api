openapi: 3.0.0
info:
  description: >-
    Aggregator API for collecting weather info of a location.
  version: 1.0.0
  title: Weather Aggregator API
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: weather
    description: Collected weather information
  - name: location
    description: GPS location of the weather information
paths:
  /location/{locationId}/weather:
    get:
      tags:
        - weather
      summary: Get weather information from location
      description: Get the weather information from the given Location.
      operationId: getWeatherByLocation
      parameters:
        - name: locationId
          in: path
          description: ID of the location
          required: true
          schema:
            type: integer
            format: int64
        - { in: query, name: page, schema: { type: integer } }
        - { in: query, name: perPage, schema: { type: integer } }
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Weather'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: No Record Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /location:
    post:
      tags:
        - location
      summary: Add location
      description: Add new location
      operationId: insertLocation
      requestBody: 
        $ref: '#/components/requestBodies/Location'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /location/{locationId}:
    put:
      tags: 
        - location
      summary: Update location
      description: Update location information
      operationId: updateLocationById
      parameters:
        - name: locationId
          in: path
          description: ID of location
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Location'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags: 
        - location
      summary: Delete location
      description: Delete location information
      operationId: deleteLocationById
      parameters:
        - name: locationId
          in: path
          description: ID of location
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/Location'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Record Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '422':
          description: Unprocessable Record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
components:
  requestBodies:
    Weather:
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/Weather'
    Location:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Location'
  schemas:
    Weather: 
      title: Weather Information
      description: Collected weather information
      type: object
      required:
        - location
      properties:
        id:
          type: integer
          format: int64
        airTemperature:
          type: number
          format: float
        humidity:
          type: number
          format: float
        precipitation:
          type: number
          format: float
        eventDateTime:
          type: string
          format: date-time
        location:
          $ref: '#/components/schemas/Location'
    Location:
      title: GPS Location
      description: Record of the specified landmark or location
      type: object
      required:
        - longitude
        - latitude
        - name
      properties:
        id:
          type: string
        longitude:
          type: string
        latitude:
          type: string
        name:
          type: string
        description:
          type: string
    ApiResponse:
      title: Server response for an event or request
      description: Return the status response for a request or event
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details: 
          type: string
    Pagination:
      title: Record Pagination
      description: Pagination of long array
      type: object
      properties:
        total:
          type: number
        page:
          type: number
        perPage:
          type: number
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean
        results: 
          type: array
          items: {}